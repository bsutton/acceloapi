package au.com.noojee.acceloapi.entities;

import java.io.IOException;
import java.util.Date;
import java.util.HashMap;

import au.com.noojee.acceloapi.AcceloApi;
import au.com.noojee.acceloapi.AcceloException;
import au.com.noojee.acceloapi.AcceloFieldList;
import au.com.noojee.acceloapi.AcceloResponse;
import au.com.noojee.acceloapi.AcceloResponseList;
import au.com.noojee.acceloapi.EndPoint;
import au.com.noojee.acceloapi.filter.AcceloFilter;
import au.com.noojee.acceloapi.filter.expressions.Eq;

public class Invoice
{
	public class Response extends AcceloResponse<Invoice>
	{
	}

	public class ResponseList extends AcceloResponseList<Invoice>
	{
	}

	private int id; // A unique identifier for the invoice.
	private float amount; // The value of the invoice, less any tax.
	private String subject; // The title of the invoice
	private String against_type; // The object the invoice was created against.
	private int against_id; // The unique identifier for the object the invoice
							// was
	// created against.
	private String notes; // notes made on the invoice.
	private int invoice_number; // If the invoice has been pushed to an
								// accounting
	// system (e.g. Xero, Quickbooks Online, Saasu, etc.),
	// then this will be the invoice number generated by
	// this system.
	private int currency_id;// unsigned The unique identifier for the currency
							// used on
	// the invoice.
	private int owner_id; // unsigned The unique identifier for the staff member
							// labeled
	// as the owner on the deployment.
	private float tax; // The value of any tax on the invoice.
	private float outstanding; // decimal The value of the invoice left unpaid,
	// including taxes.
	private int modified_by; // unsigned The unique identifier of the staff
								// member who
	// last modified the invoice.
	private long date_raised; // unix ts The date the invoice was raised.
	private long date_due; // unix ts The date the invoice is due.
	private long date_modified; // unix ts The date the invoice was last
								// modified.
	private int contact; // unsigned or object The contact to whom the invoice
							// is to be
	// billed.
	private int affiliation_id; // unsigned The unique identifier for the
								// affiliation
	// the invoice is raised against.
	private int affiliation; // unsigned or object The affiliation against whom
								// the
	// invoice is raised.
	private int creator_id; // unsigned The unique identifier for the staff
							// member who
	// created the deployment.
	private int created_by; // unsigned or object The staff member who created
							// the
	// invoice.

	// Staff don't change very often.
	static HashMap<Integer, Invoice> invoiceCache = new HashMap<>();

	/**
	 * Get the Invoice by its id.
	 */
	static public Invoice getById(AcceloApi api, int invoice_id) throws AcceloException
	{

		Invoice invoice = invoiceCache.get(invoice_id);

		if (invoice == null && invoice_id != 0)
		{

			Invoice.ResponseList response;
			try
			{
				AcceloFilter filter = new AcceloFilter();
				filter.add(new Eq("id", invoice_id));

				AcceloFieldList fields = new AcceloFieldList();
				fields.add("_ALL");
				fields.add("status(_ALL)");

				response = api.get(EndPoint.invoices, filter, fields, Invoice.ResponseList.class);
			}
			catch (IOException e)
			{
				throw new AcceloException(e);
			}

			if (response != null)
				invoice = response.getList().size() > 0 ? response.getList().get(0) : null;

			if (invoice != null)
				invoiceCache.put(invoice.getId(), invoice);
		}

		return invoice;
	}

	@Override
	public String toString()
	{
		return "Invoice [id=" + id + ", amount=" + amount + ", subject=" + subject + ", against_type=" + against_type
				+ ", against_id=" + against_id + ", notes=" + notes + ", invoice_number=" + invoice_number
				+ ", currency_id=" + currency_id + ", owner_id=" + owner_id + ", tax=" + tax + ", outstanding="
				+ outstanding + ", modified_by=" + modified_by + ", date_raised=" + date_raised + ", date_due="
				+ date_due + ", date_modified=" + date_modified + ", contact=" + contact + ", affiliation_id="
				+ affiliation_id + ", affiliation=" + affiliation + ", creator_id=" + creator_id + ", created_by="
				+ created_by + "]";
	}

	public int getId()
	{
		return id;
	}

	public float getAmount()
	{
		return amount;
	}

	public String getSubject()
	{
		return subject;
	}

	public String getAgainst_type()
	{
		return against_type;
	}

	public int getAgainst_id()
	{
		return against_id;
	}

	public String getNotes()
	{
		return notes;
	}

	public int getInvoice_number()
	{
		return invoice_number;
	}

	public int getCurrency_id()
	{
		return currency_id;
	}

	public int getOwner_id()
	{
		return owner_id;
	}

	public float getTax()
	{
		return tax;
	}

	public float getOutstanding()
	{
		return outstanding;
	}

	public int getModified_by()
	{
		return modified_by;
	}

	public Date getDate_raised()
	{
		return new Date(date_raised);
	}

	public Date getDate_due()
	{
		return new Date(date_due);
	}

	public Date getDate_modified()
	{
		return new Date(date_modified);
	}

	public int getContact()
	{
		return contact;
	}

	public int getAffiliation_id()
	{
		return affiliation_id;
	}

	public int getAffiliation()
	{
		return affiliation;
	}

	public int getCreator_id()
	{
		return creator_id;
	}

	public int getCreated_by()
	{
		return created_by;
	}

}
